{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Modelo/Producto.ts","webpack:///./src/app/Producto/agregar/agregar.component.css","webpack:///./src/app/Producto/agregar/agregar.component.html","webpack:///./src/app/Producto/agregar/agregar.component.ts","webpack:///./src/app/Producto/editar/editar.component.css","webpack:///./src/app/Producto/editar/editar.component.html","webpack:///./src/app/Producto/editar/editar.component.ts","webpack:///./src/app/Producto/listar/listar.component.css","webpack:///./src/app/Producto/listar/listar.component.html","webpack:///./src/app/Producto/listar/listar.component.ts","webpack:///./src/app/Service/service.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export class Producto{\n    idProducto : number;\n    nombre : string;    \n    descripcion : string;\n    imagen: string;\n    presentacion: string;\n    precio: number;\n    contenido : string;\n    ibu: string;\n    volumen: string;\n    stock: string;\n    estado: string;\n    procedencia: string;\n    categoria: string;\n    marca : string;\n    fechaRegistro: string;\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1Byb2R1Y3RvL2FncmVnYXIvYWdyZWdhci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container col-md-6\\\" >\\n    <div class=\\\"card\\\" >\\n        <div class=\\\"card-header\\\">\\n            <h3>Agregar Producto</h3>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n            <form action=\\\"\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"\\\">Nombre: </label>\\n                    <input [(ngModel)]=\\\"producto.Nombre\\\" name=\\\"nombre\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"\\\" >Descripcion: </label>\\n                    <input [(ngModel)]=\\\"producto.Descripcion\\\" name=\\\"descripcion\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"\\\">Imagen: </label>                    \\n                    <input [(ngModel)]=\\\"producto.Imagen\\\" name=\\\"marca\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"\\\">Presentacion: </label>                    \\n                    <input [(ngModel)]=\\\"producto.Presentacion\\\" name=\\\"presentacion\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"\\\">Precio: </label>                    \\n                    <input [(ngModel)]=\\\"producto.Precio\\\" name=\\\"precio\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"\\\">Contenido: </label>                    \\n                    <input [(ngModel)]=\\\"producto.Contenido\\\" name=\\\"contenido\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"\\\">Ibu: </label>                    \\n                    <input [(ngModel)]=\\\"producto.Ibu\\\" name=\\\"ibu\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"\\\">Volumen: </label>                    \\n                    <input [(ngModel)]=\\\"producto.Volumen\\\" name=\\\"volumen\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"\\\">Stock: </label>                    \\n                    <input [(ngModel)]=\\\"producto.Stock\\\" name=\\\"stock\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"\\\">Estado: </label>                    \\n                    <input [(ngModel)]=\\\"producto.Estado\\\" name=\\\"estado\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"\\\">Procedencia: </label>                    \\n                    <input [(ngModel)]=\\\"producto.Procedencia\\\" name=\\\"procedencia\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"\\\">Categoria: </label>                    \\n                    <input [(ngModel)]=\\\"producto.Categoria\\\" name=\\\"categoria\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"\\\">Marca: </label>                    \\n                    <input [(ngModel)]=\\\"producto.Marca\\\" name=\\\"marca\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"\\\">FechaRegistro: </label>                    \\n                    <input [(ngModel)]=\\\"producto.FechaRegistro\\\" name=\\\"fechaRegistro\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                </div>\\n                <button (click)=\\\"Guardar()\\\" class=\\\"btn btn-danger\\\">Guardar</button>\\n            </form>                        \\n        </div>\\n    </div>\\n</div>\\n<!-- Evento a agregar (click)=\\\"guardar()\\\"-->\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Producto } from 'src/app/Modelo/Producto';\nimport { ServiceService } from 'src/app/Service/service.service';\n\n@Component({\n  selector: 'app-agregar',\n  templateUrl: './agregar.component.html',\n  styleUrls: ['./agregar.component.css']\n})\n\nexport class AgregarComponent implements OnInit {\n\n  producto:Producto=new Producto();\n  constructor(private router:Router, private service:ServiceService) { }\n\n  ngOnInit() {\n  }\n\n  Guardar(){\n    this.service.createProducto(this.producto)\n    .subscribe(data=>{\n      alert(\"Se Agrego con Exito...!!!\");\n      this.router.navigate([\"listar\"]);\n    })\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1Byb2R1Y3RvL2VkaXRhci9lZGl0YXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container col-md-6\\\" >\\n    <div class=\\\"card\\\" >\\n        <div class=\\\"card-header\\\">\\n            <h3>Editar Producto</h3>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n            <form action=\\\"\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"\\\">IdProducto: </label>\\n                    <input [(ngModel)]=\\\"producto.IdProducto\\\" name=\\\"idProducto\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"\\\">Nombre: </label>\\n                    <input [(ngModel)]=\\\"producto.Nombre\\\" name=\\\"nombre\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"\\\" >Descripcion: </label>\\n                    <input [(ngModel)]=\\\"producto.Descripcion\\\" name=\\\"descripcion\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"\\\">Imagen: </label>                    \\n                    <input [(ngModel)]=\\\"producto.Imagen\\\" name=\\\"marca\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"\\\">Presentacion: </label>                    \\n                    <input [(ngModel)]=\\\"producto.Presentacion\\\" name=\\\"presentacion\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"\\\">Precio: </label>                    \\n                    <input [(ngModel)]=\\\"producto.Precio\\\" name=\\\"precio\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"\\\">Contenido: </label>                    \\n                    <input [(ngModel)]=\\\"producto.Contenido\\\" name=\\\"contenido\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"\\\">Ibu: </label>                    \\n                    <input [(ngModel)]=\\\"producto.Ibu\\\" name=\\\"ibu\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"\\\">Volumen: </label>                    \\n                    <input [(ngModel)]=\\\"producto.Volumen\\\" name=\\\"volumen\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"\\\">Stock: </label>                    \\n                    <input [(ngModel)]=\\\"producto.Stock\\\" name=\\\"stock\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"\\\">Estado: </label>                    \\n                    <input [(ngModel)]=\\\"producto.Estado\\\" name=\\\"estado\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"\\\">Procedencia: </label>                    \\n                    <input [(ngModel)]=\\\"producto.Procedencia\\\" name=\\\"procedencia\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"\\\">Categoria: </label>                    \\n                    <input [(ngModel)]=\\\"producto.Categoria\\\" name=\\\"categoria\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"\\\">Marca: </label>                    \\n                    <input [(ngModel)]=\\\"producto.Marca\\\" name=\\\"marca\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"\\\">FechaRegistro: </label>                    \\n                    <input [(ngModel)]=\\\"producto.FechaRegistro\\\" name=\\\"fechaRegistro\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n                </div>\\n                <button (click)=\\\"Actualizar(producto)\\\" class=\\\"btn btn-danger\\\">Actualizar</button>\\n            </form>                        \\n        </div>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Producto } from 'src/app/Modelo/Producto';\nimport { ServiceService } from 'src/app/Service/service.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-editar',\n  templateUrl: './editar.component.html',\n  styleUrls: ['./editar.component.css']\n})\nexport class EditarComponent implements OnInit {\n  //public form: FormGroup  \n  producto :Producto=new Producto();\n  constructor(\n   // private formBuilder: FormBuilder   ,\n    private router:Router,private service:ServiceService) { \n\n    /*this.form = this.formBuilder.group({\n      codigo: 0,\n      Nombre: '',//['', Validators.required],\n      Descripcion: '',// ['', Validators.required],\n      Marca: ''// ['', Validators.required]\n    })*/\n  }\n\n  ngOnInit() {\n    this.Editar();\n  }\n\n  Editar(){\n    debugger;\n    let codigo=localStorage.getItem(\"Codigo\");\n    this.service.getProductoId(+codigo)\n    .subscribe(data=>{\n      this.producto.idProducto  =data[0].idProducto;\n      this.producto.nombre  =data[0].nombre;\n      this.producto.descripcion = data[0].descripcion;\n      this.producto.imagen = data[0].imagen;\n      this.producto.presentacion = data[0].presentacion;\n      this.producto.precio = data[0].precio;\n      this.producto.contenido = data[0].contenido;\n      this.producto.ibu = data[0].ibu;\n      this.producto.volumen = data[0].volumen;\n      this.producto.stock = data[0].stock;\n      this.producto.estado = data[0].estado;\n      this.producto.procedencia = data[0].procedencia;\n      this.producto.categoria = data[0].categoria;\n      this.producto.marca = data[0].marca;\n      this.producto.fechaRegistro = data[0].fechaRegistro;\n      //this.form.patchValue(data)\n    })\n\n  }\n  Actualizar(producto:Producto){\n    this.service.updateProducto(producto)\n    .subscribe(data=>{\n      this.producto=data;\n      alert(\"Se Actualizo con Exito...!!!\");\n      this.router.navigate([\"listar\"]);\n    })\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1Byb2R1Y3RvL2xpc3Rhci9saXN0YXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\" >\\n    <div class=\\\"card\\\" >\\n        <div class=\\\"card-header\\\">\\n            <h3>Producto</h3>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n            <table class=\\\"table table-hover\\\">\\n                <thead>\\n                    <tr>\\n                        <th>IdProducto</th>\\n                        <th>Nombre</th>\\n                        <th>Descripcion</th>\\n                        <th>Imagen</th>\\n                        <th>Presentacion</th>\\n                        <th>Precio</th>\\n                        <th>Contenido</th>\\n                        <th>Ibu</th>\\n                        <th>Volumen</th>\\n                        <th>Stock</th>\\n                        <th>Estado</th>\\n                        <th>Procedencia</th>\\n                        <th>Categoria</th>\\n                        <th>Marca</th>\\n                        <th>FechaRegistro</th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <tr *ngFor=\\\"let producto of producto\\\" class=\\\"text-center\\\">\\n                        <td>{{producto.idProducto}}</td>\\n                        <td>{{producto.nombre}}</td>\\n                        <td>{{producto.descripcion}}</td>\\n                        <td>{{producto.imagen}}</td>\\n                        <td>{{producto.presentacion}}</td>\\n                        <td>{{producto.precio}}</td>\\n                        <td>{{producto.contenido}}</td>\\n                        <td>{{producto.ibu}}</td>\\n                        <td>{{producto.volumen}}</td>\\n                        <td>{{producto.stock}}</td>\\n                        <td>{{producto.estado}}</td>\\n                        <td>{{producto.procedencia}}</td>\\n                        <td>{{producto.categoria}}</td>\\n                        <td>{{producto.marca}}</td>\\n                        <td>{{producto.fechaRegistro}}</td>\\n                        <td>\\n                            <button (click)=\\\"Editar(producto)\\\" class=\\\"btn btn-warning\\\">Editar</button>\\n                            <button (click)=\\\"Delete(producto)\\\" class=\\\"btn btn-danger\\\" style=\\\"margin-left: 10px;\\\">Eliminar</button>\\n                          </td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ServiceService } from 'src/app/Service/service.service';\nimport { Producto } from 'src/app/Modelo/Producto';\n\n@Component({\n  selector: 'app-listar',\n  templateUrl: './listar.component.html',\n  styleUrls: ['./listar.component.css']\n})\nexport class ListarComponent implements OnInit {\n\n  producto: Producto[];\n  constructor(private service: ServiceService, private router: Router) { }\n\n  ngOnInit() {\n    this.service.getProductos()\n      .subscribe(data => {\n        this.producto = data;\n      });\n  }\n  Editar(producto:Producto):void{\n    localStorage.setItem(\"idProducto\",producto.idProducto.toString());\n    this.router.navigate([\"editar\"]);\n  }\n\n  Delete(producto:Producto){\n    this.service.deleteProducto(producto)\n    .subscribe(data=>{\n      this.producto=this.producto.filter(p=>p!==producto);\n      alert(\"Usuario eliminado...\");\n    })\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\nimport { Producto } from '../Modelo/Producto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceService {\n\n  constructor(private http:HttpClient) { }\n\n  Url='satira/producto';\n\n  getProductos(){\n    return this.http.get<Producto[]>(this.Url);\n  }\n  createProducto(producto:Producto){\n    return this.http.post<Producto>(this.Url,producto);\n  }\n  getProductoId(idProducto:number){\n    return this.http.get<Producto>(this.Url+\"/\"+idProducto);\n  }\n  updateProducto(producto:Producto){\n    return this.http.put<Producto>(this.Url+\"/\"+producto.idProducto,producto);\n  }\n  deleteProducto(producto:Producto){\n    return this.http.delete<Producto>(this.Url+\"/\"+producto.idProducto);\n  }\n  \n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AgregarComponent } from './Producto/agregar/agregar.component';\nimport { ListarComponent } from './Producto/listar/listar.component';\nimport { EditarComponent } from './Producto/editar/editar.component';\n\nconst routes: Routes = [\n  {path: 'listar',component:ListarComponent},\n  {path: 'agregar',component:AgregarComponent},\n  {path: 'editar',component:EditarComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div  style=\\\"text-align:center\\\">\\n  <h1>\\n    Bienvenido a {{ title }}!\\n  </h1>\\n  <h2>Cervezas Artezanales</h2>\\n  <img width=\\\"130\\\" alt=\\\"Duff logo\\\" src=\\\"assets/images.png\\\" >\\n</div>\\n<br>\\n<div class=\\\"container text-center\\\">\\n  <button (click)=\\\"Listar()\\\" class=\\\"btn btn-info\\\">Listar</button>\\n  <button (click)=\\\"Nuevo()\\\" class=\\\"btn btn-info\\\" style=\\\"margin-left: 10px;\\\">Nuevo</button> \\n</div>\\n<a href=\\\"\\\">Inicio</a>\\n<hr>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Sátira';\n\n  constructor(private router: Router) { }\n\n  Listar() {\n    this.router.navigate([\"listar\"]);\n  }\n  Nuevo(){\n    this.router.navigate([\"agregar\"]);\n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ListarComponent } from './Producto/listar/listar.component';\nimport { AgregarComponent } from './Producto/agregar/agregar.component';\nimport { EditarComponent } from './Producto/editar/editar.component';\nimport { FormsModule } from '@angular/forms';\nimport { ServiceService } from './Service/service.service';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListarComponent,\n    AgregarComponent,\n    EditarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [ServiceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}